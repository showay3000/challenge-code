
//Shopping List 
This project is a simple, interactive shopping list application built with HTML, CSS, and JavaScript. It allows users to add, edit, delete, mark items as purchased, and clear the entire list. The interface is clean and user-friendly, making it a great utility for managing tasks or shopping items.

//Features
Add Items:

Enter an item name in the input field and click the "Add" button or press "Enter" to add the item to the list.
Edit Items:

Click the "Edit" button to modify the item's name.
Mark Items as Purchased:

Click the "Purchased" button to mark an item as purchased. Purchased items are styled with a line-through and green background.
Delete Items:

Remove individual items by clicking the "Delete" button.
Clear All Items:

Use the "Clear" button to remove all items from the list at once.
//File Structure
index.html: The main HTML file that contains the structure of the application.
Inline CSS: Basic styles included within the HTML <style> tag.
script.js: A separate JavaScript file handling the application's interactivity.
//How to Use
Setup:

Ensure all required files (index.html and script.js) are in the same directory.
Run the Application:

Open the index.html file in any modern web browser.
Add Items:

Type an item name in the input field and click "Add" or press "Enter."
Edit or Delete Items:

Use the buttons next to each item to edit, mark as purchased, or delete the item.
Clear All Items:

Click the "Clear" button to remove all items from the list.



// js Shopping List 
This project is a dynamic shopping list application built with plain JavaScript, HTML, and basic styling. The application allows users to manage a shopping list by adding, editing, deleting, marking items as purchased, and clearing the list.

Features
Add Items:

Users can type an item name in the input field and click the "Add" button or press "Enter" to add it to the list.
Edit Items:

Items can be edited by clicking the "Edit" button. This toggles an input field to modify the item's text.
Mark Items as Purchased:

Click the "Purchased" button to mark an item as purchased, applying a visual distinction.
Delete Items:

Remove individual items by clicking the "Delete" button.
Clear All Items:

Use the "Clear" button to remove all items from the list.
How It Works
HTML Structure:

Input field and buttons for user interaction.
A ul element (#shoppinglist) to hold the dynamically generated list items.
JavaScript Functionalities:

addItem: Adds a new item with text, edit, toggle purchased, and delete buttons.
togglePurchased: Toggles the purchased class for styling purchased items.
deleteItem: Removes an item from the shopping list.
editItem: Enables inline editing of an item's name.
clearList: Clears all items from the shopping list.
Event Listeners:

Buttons and input fields listen for user actions to perform respective tasks.
File Structure
HTML:

Contains the input field, buttons, and a container for the shopping list.
JavaScript:

Implements dynamic list handling through DOM manipulation and event handling.
Example Workflow
Adding an Item:

Type "Apples" into the input field and press "Add" or hit "Enter."
"Apples" will appear in the list with "Edit," "Purchased," and "Delete" buttons.
Editing an Item:

Click "Edit" next to "Apples" to modify the text. Update the name and press Enter to save.
Marking as Purchased:

Click "Purchased" to mark the item with a line-through style.
Deleting an Item:

Click "Delete" to remove "Apples" from the list.
Clearing the List:

Click "Clear" to remove all items at once.